// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TokoSayaAPI.Data;

#nullable disable

namespace TokoSayaAPI.Migrations
{
    [DbContext(typeof(TokoSayaContext))]
    [Migration("20240402144138_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TokoSayaAPI.Models.Penjualan", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Penjualan");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.PenjualanProduk", b =>
                {
                    b.Property<int>("PenjualanId")
                        .HasColumnType("int");

                    b.Property<int>("ProdukId")
                        .HasColumnType("int");

                    b.Property<int>("Kuantitas")
                        .HasColumnType("int");

                    b.HasKey("PenjualanId", "ProdukId");

                    b.HasIndex("ProdukId");

                    b.ToTable("PenjualanProduk");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Produk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Harga")
                        .HasColumnType("real");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produk");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Register");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Toko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTlp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Toko");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Penjualan", b =>
                {
                    b.HasOne("TokoSayaAPI.Models.Register", "Register")
                        .WithOne("Penjualan")
                        .HasForeignKey("TokoSayaAPI.Models.Penjualan", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.PenjualanProduk", b =>
                {
                    b.HasOne("TokoSayaAPI.Models.Penjualan", "Penjualan")
                        .WithMany("PenjualanProduk")
                        .HasForeignKey("PenjualanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TokoSayaAPI.Models.Produk", "Produk")
                        .WithMany("PenjualanProduk")
                        .HasForeignKey("ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Penjualan");

                    b.Navigation("Produk");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Register", b =>
                {
                    b.HasOne("TokoSayaAPI.Models.Toko", "Toko")
                        .WithOne("Register")
                        .HasForeignKey("TokoSayaAPI.Models.Register", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toko");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Penjualan", b =>
                {
                    b.Navigation("PenjualanProduk");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Produk", b =>
                {
                    b.Navigation("PenjualanProduk");
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Register", b =>
                {
                    b.Navigation("Penjualan")
                        .IsRequired();
                });

            modelBuilder.Entity("TokoSayaAPI.Models.Toko", b =>
                {
                    b.Navigation("Register")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
